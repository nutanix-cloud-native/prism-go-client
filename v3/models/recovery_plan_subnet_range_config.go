// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RecoveryPlanSubnetRangeConfig Network subnet range.
//
// Network subnet range.
//
// swagger:model recovery_plan_subnet_range_config
type RecoveryPlanSubnetRangeConfig struct {

	// End IP address of the subnet range.
	//
	// Required: true
	// Pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
	EndIPAddress *string `json:"end_ip_address"`

	// Start IP address of the subnet range.
	//
	// Required: true
	// Pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
	StartIPAddress *string `json:"start_ip_address"`
}

// Validate validates this recovery plan subnet range config
func (m *RecoveryPlanSubnetRangeConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEndIPAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartIPAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RecoveryPlanSubnetRangeConfig) validateEndIPAddress(formats strfmt.Registry) error {

	if err := validate.Required("end_ip_address", "body", m.EndIPAddress); err != nil {
		return err
	}

	if err := validate.Pattern("end_ip_address", "body", *m.EndIPAddress, `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$`); err != nil {
		return err
	}

	return nil
}

func (m *RecoveryPlanSubnetRangeConfig) validateStartIPAddress(formats strfmt.Registry) error {

	if err := validate.Required("start_ip_address", "body", m.StartIPAddress); err != nil {
		return err
	}

	if err := validate.Pattern("start_ip_address", "body", *m.StartIPAddress, `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$`); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this recovery plan subnet range config based on context it is used
func (m *RecoveryPlanSubnetRangeConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RecoveryPlanSubnetRangeConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RecoveryPlanSubnetRangeConfig) UnmarshalBinary(b []byte) error {
	var res RecoveryPlanSubnetRangeConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
