// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CategoryFilter A category filter
//
// A category filter.
//
// swagger:model category_filter
type CategoryFilter struct {

	// List of kinds associated with this filter.
	KindList []string `json:"kind_list"`

	// A list of category key and list of values.
	// Required: true
	Params map[string][]string `json:"params"`

	// The type of the filter being used.
	Type *string `json:"type,omitempty"`
}

// Validate validates this category filter
func (m *CategoryFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CategoryFilter) validateParams(formats strfmt.Registry) error {

	if err := validate.Required("params", "body", m.Params); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this category filter based on context it is used
func (m *CategoryFilter) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CategoryFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CategoryFilter) UnmarshalBinary(b []byte) error {
	var res CategoryFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
